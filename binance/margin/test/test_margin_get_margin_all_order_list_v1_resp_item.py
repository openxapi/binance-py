# coding: utf-8

"""
    Binance Margin Trading API

    OpenAPI specification for Binance exchange - Margin API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.margin.models.margin_get_margin_all_order_list_v1_resp_item import MarginGetMarginAllOrderListV1RespItem

class TestMarginGetMarginAllOrderListV1RespItem(unittest.TestCase):
    """MarginGetMarginAllOrderListV1RespItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MarginGetMarginAllOrderListV1RespItem:
        """Test MarginGetMarginAllOrderListV1RespItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MarginGetMarginAllOrderListV1RespItem`
        """
        model = MarginGetMarginAllOrderListV1RespItem()
        if include_optional:
            return MarginGetMarginAllOrderListV1RespItem(
                contingency_type = '',
                is_isolated = True,
                list_client_order_id = '',
                list_order_status = '',
                list_status_type = '',
                order_list_id = 56,
                orders = [
                    binance.margin.models.margin_create_margin_order_oco_v1_resp_orders_inner.MarginCreateMarginOrderOcoV1Resp_orders_inner(
                        client_order_id = '', 
                        order_id = 56, 
                        symbol = '', )
                    ],
                symbol = '',
                transaction_time = 56
            )
        else:
            return MarginGetMarginAllOrderListV1RespItem(
        )
        """

    def testMarginGetMarginAllOrderListV1RespItem(self):
        """Test MarginGetMarginAllOrderListV1RespItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

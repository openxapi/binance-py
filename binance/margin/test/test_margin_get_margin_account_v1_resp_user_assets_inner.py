# coding: utf-8

"""
    Binance Margin Trading API

    OpenAPI specification for Binance exchange - Margin API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.margin.models.margin_get_margin_account_v1_resp_user_assets_inner import MarginGetMarginAccountV1RespUserAssetsInner

class TestMarginGetMarginAccountV1RespUserAssetsInner(unittest.TestCase):
    """MarginGetMarginAccountV1RespUserAssetsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MarginGetMarginAccountV1RespUserAssetsInner:
        """Test MarginGetMarginAccountV1RespUserAssetsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MarginGetMarginAccountV1RespUserAssetsInner`
        """
        model = MarginGetMarginAccountV1RespUserAssetsInner()
        if include_optional:
            return MarginGetMarginAccountV1RespUserAssetsInner(
                asset = '',
                borrowed = '',
                free = '',
                interest = '',
                locked = '',
                net_asset = ''
            )
        else:
            return MarginGetMarginAccountV1RespUserAssetsInner(
        )
        """

    def testMarginGetMarginAccountV1RespUserAssetsInner(self):
        """Test MarginGetMarginAccountV1RespUserAssetsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

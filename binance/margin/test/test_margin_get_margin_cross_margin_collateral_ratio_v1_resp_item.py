# coding: utf-8

"""
    Binance Margin Trading API

    OpenAPI specification for Binance exchange - Margin API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.margin.models.margin_get_margin_cross_margin_collateral_ratio_v1_resp_item import MarginGetMarginCrossMarginCollateralRatioV1RespItem

class TestMarginGetMarginCrossMarginCollateralRatioV1RespItem(unittest.TestCase):
    """MarginGetMarginCrossMarginCollateralRatioV1RespItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MarginGetMarginCrossMarginCollateralRatioV1RespItem:
        """Test MarginGetMarginCrossMarginCollateralRatioV1RespItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MarginGetMarginCrossMarginCollateralRatioV1RespItem`
        """
        model = MarginGetMarginCrossMarginCollateralRatioV1RespItem()
        if include_optional:
            return MarginGetMarginCrossMarginCollateralRatioV1RespItem(
                asset_names = [
                    ''
                    ],
                collaterals = [
                    binance.margin.models.margin_get_margin_cross_margin_collateral_ratio_v1_resp_item_collaterals_inner.MarginGetMarginCrossMarginCollateralRatioV1RespItem_collaterals_inner(
                        discount_rate = '', 
                        max_usd_value = '', 
                        min_usd_value = '', )
                    ]
            )
        else:
            return MarginGetMarginCrossMarginCollateralRatioV1RespItem(
        )
        """

    def testMarginGetMarginCrossMarginCollateralRatioV1RespItem(self):
        """Test MarginGetMarginCrossMarginCollateralRatioV1RespItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

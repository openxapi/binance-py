# coding: utf-8

"""
    Binance Algorithmic Trading API

    OpenAPI specification for Binance exchange - Algo API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.algo.models.algo_get_algo_futures_sub_orders_v1_resp_sub_orders_inner import AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner

class TestAlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner(unittest.TestCase):
    """AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner:
        """Test AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner`
        """
        model = AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner()
        if include_optional:
            return AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner(
                algo_id = 56,
                avg_price = '',
                book_time = 56,
                executed_amt = '',
                executed_qty = '',
                fee_amt = '',
                fee_asset = '',
                order_id = 56,
                order_status = '',
                orig_qty = '',
                side = '',
                sub_id = 56,
                symbol = '',
                time_in_force = ''
            )
        else:
            return AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner(
        )
        """

    def testAlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner(self):
        """Test AlgoGetAlgoFuturesSubOrdersV1RespSubOrdersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

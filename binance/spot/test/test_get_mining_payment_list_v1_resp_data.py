# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_mining_payment_list_v1_resp_data import GetMiningPaymentListV1RespData

class TestGetMiningPaymentListV1RespData(unittest.TestCase):
    """GetMiningPaymentListV1RespData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetMiningPaymentListV1RespData:
        """Test GetMiningPaymentListV1RespData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetMiningPaymentListV1RespData`
        """
        model = GetMiningPaymentListV1RespData()
        if include_optional:
            return GetMiningPaymentListV1RespData(
                account_profits = [
                    binance.spot.models.get_mining_payment_list_v1_resp_data_account_profits_inner.GetMiningPaymentListV1Resp_data_accountProfits_inner(
                        coin_name = '', 
                        day_hash_rate = 56, 
                        hash_transfer = binance.spot.models.hash_transfer.hashTransfer(), 
                        profit_amount = 1.337, 
                        status = 56, 
                        time = 56, 
                        transfer_amount = binance.spot.models.transfer_amount.transferAmount(), 
                        type = 56, )
                    ],
                page_size = 56,
                total_num = 56
            )
        else:
            return GetMiningPaymentListV1RespData(
        )
        """

    def testGetMiningPaymentListV1RespData(self):
        """Test GetMiningPaymentListV1RespData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_c2c_order_match_list_user_order_history_v1_resp import GetC2cOrderMatchListUserOrderHistoryV1Resp

class TestGetC2cOrderMatchListUserOrderHistoryV1Resp(unittest.TestCase):
    """GetC2cOrderMatchListUserOrderHistoryV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetC2cOrderMatchListUserOrderHistoryV1Resp:
        """Test GetC2cOrderMatchListUserOrderHistoryV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetC2cOrderMatchListUserOrderHistoryV1Resp`
        """
        model = GetC2cOrderMatchListUserOrderHistoryV1Resp()
        if include_optional:
            return GetC2cOrderMatchListUserOrderHistoryV1Resp(
                code = '',
                data = [
                    binance.spot.models.get_c2c_order_match_list_user_order_history_v1_resp_data_inner.GetC2cOrderMatchListUserOrderHistoryV1Resp_data_inner(
                        adv_no = '', 
                        advertisement_role = '', 
                        amount = '', 
                        asset = '', 
                        commission = '', 
                        counter_part_nick_name = '', 
                        create_time = 56, 
                        fiat = '', 
                        fiat_symbol = '', 
                        order_number = '', 
                        order_status = '', 
                        total_price = '', 
                        trade_type = '', 
                        unit_price = '', )
                    ],
                message = '',
                success = True,
                total = 56
            )
        else:
            return GetC2cOrderMatchListUserOrderHistoryV1Resp(
        )
        """

    def testGetC2cOrderMatchListUserOrderHistoryV1Resp(self):
        """Test GetC2cOrderMatchListUserOrderHistoryV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

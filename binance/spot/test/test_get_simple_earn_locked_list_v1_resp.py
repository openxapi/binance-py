# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_simple_earn_locked_list_v1_resp import GetSimpleEarnLockedListV1Resp

class TestGetSimpleEarnLockedListV1Resp(unittest.TestCase):
    """GetSimpleEarnLockedListV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSimpleEarnLockedListV1Resp:
        """Test GetSimpleEarnLockedListV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSimpleEarnLockedListV1Resp`
        """
        model = GetSimpleEarnLockedListV1Resp()
        if include_optional:
            return GetSimpleEarnLockedListV1Resp(
                rows = [
                    binance.spot.models.get_simple_earn_locked_list_v1_resp_rows_inner.GetSimpleEarnLockedListV1Resp_rows_inner(
                        detail = binance.spot.models.get_simple_earn_locked_list_v1_resp_rows_inner_detail.GetSimpleEarnLockedListV1Resp_rows_inner_detail(
                            apr = '', 
                            asset = '', 
                            boost_apr = '', 
                            boost_end_time = '', 
                            boost_reward_asset = '', 
                            duration = 56, 
                            extra_reward_apr = '', 
                            extra_reward_asset = '', 
                            is_sold_out = True, 
                            renewable = True, 
                            reward_asset = '', 
                            status = '', 
                            subscription_start_time = '', ), 
                        project_id = '', 
                        quota = binance.spot.models.get_simple_earn_locked_list_v1_resp_rows_inner_quota.GetSimpleEarnLockedListV1Resp_rows_inner_quota(
                            minimum = '', 
                            total_personal_quota = '', ), )
                    ],
                total = 56
            )
        else:
            return GetSimpleEarnLockedListV1Resp(
        )
        """

    def testGetSimpleEarnLockedListV1Resp(self):
        """Test GetSimpleEarnLockedListV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.2.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_sub_account_futures_position_risk_v1_resp_item import GetSubAccountFuturesPositionRiskV1RespItem

class TestGetSubAccountFuturesPositionRiskV1RespItem(unittest.TestCase):
    """GetSubAccountFuturesPositionRiskV1RespItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSubAccountFuturesPositionRiskV1RespItem:
        """Test GetSubAccountFuturesPositionRiskV1RespItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSubAccountFuturesPositionRiskV1RespItem`
        """
        model = GetSubAccountFuturesPositionRiskV1RespItem()
        if include_optional:
            return GetSubAccountFuturesPositionRiskV1RespItem(
                entry_price = '',
                leverage = '',
                liquidation_price = '',
                mark_price = '',
                max_notional = '',
                position_amount = '',
                symbol = '',
                unrealized_profit = ''
            )
        else:
            return GetSubAccountFuturesPositionRiskV1RespItem(
        )
        """

    def testGetSubAccountFuturesPositionRiskV1RespItem(self):
        """Test GetSubAccountFuturesPositionRiskV1RespItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

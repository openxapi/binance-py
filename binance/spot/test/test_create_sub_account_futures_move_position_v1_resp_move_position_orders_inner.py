# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.create_sub_account_futures_move_position_v1_resp_move_position_orders_inner import CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner

class TestCreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner(unittest.TestCase):
    """CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner:
        """Test CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner`
        """
        model = CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner()
        if include_optional:
            return CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner(
                from_user_email = '',
                position_side = '',
                price = '',
                price_type = '',
                product_type = '',
                quantity = '',
                side = '',
                success = True,
                symbol = '',
                to_user_email = ''
            )
        else:
            return CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner(
        )
        """

    def testCreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner(self):
        """Test CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.spot_get_account_v3_resp import SpotGetAccountV3Resp

class TestSpotGetAccountV3Resp(unittest.TestCase):
    """SpotGetAccountV3Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SpotGetAccountV3Resp:
        """Test SpotGetAccountV3Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SpotGetAccountV3Resp`
        """
        model = SpotGetAccountV3Resp()
        if include_optional:
            return SpotGetAccountV3Resp(
                account_type = '',
                balances = [
                    binance.spot.models.spot_get_account_v3_resp_balances_inner.SpotGetAccountV3Resp_balances_inner(
                        asset = '', 
                        free = '', 
                        locked = '', )
                    ],
                brokered = True,
                buyer_commission = 56,
                can_deposit = True,
                can_trade = True,
                can_withdraw = True,
                commission_rates = binance.spot.models.spot_get_account_commission_v3_resp_standard_commission.SpotGetAccountCommissionV3Resp_standardCommission(
                    buyer = '', 
                    maker = '', 
                    seller = '', 
                    taker = '', ),
                maker_commission = 56,
                permissions = [
                    ''
                    ],
                prevent_sor = True,
                require_self_trade_prevention = True,
                seller_commission = 56,
                taker_commission = 56,
                uid = 56,
                update_time = 56
            )
        else:
            return SpotGetAccountV3Resp(
        )
        """

    def testSpotGetAccountV3Resp(self):
        """Test SpotGetAccountV3Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

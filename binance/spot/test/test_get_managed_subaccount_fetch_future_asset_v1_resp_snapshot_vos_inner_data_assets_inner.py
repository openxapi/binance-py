# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.2.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_managed_subaccount_fetch_future_asset_v1_resp_snapshot_vos_inner_data_assets_inner import GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner

class TestGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner(unittest.TestCase):
    """GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner:
        """Test GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner`
        """
        model = GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner()
        if include_optional:
            return GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner(
                asset = '',
                margin_balance = 56,
                wallet_balance = 56
            )
        else:
            return GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner(
        )
        """

    def testGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner(self):
        """Test GetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

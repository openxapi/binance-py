# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_mining_hash_transfer_config_details_list_v1_resp_data_config_details_inner import GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner

class TestGetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner(unittest.TestCase):
    """GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner:
        """Test GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner`
        """
        model = GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner()
        if include_optional:
            return GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner(
                algo_name = '',
                config_id = 56,
                end_day = 56,
                hash_rate = 56,
                pool_username = '',
                start_day = 56,
                status = 56,
                to_pool_username = ''
            )
        else:
            return GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner(
        )
        """

    def testGetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner(self):
        """Test GetMiningHashTransferConfigDetailsListV1RespDataConfigDetailsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

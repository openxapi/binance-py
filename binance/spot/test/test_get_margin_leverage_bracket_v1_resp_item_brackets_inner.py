# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_margin_leverage_bracket_v1_resp_item_brackets_inner import GetMarginLeverageBracketV1RespItemBracketsInner

class TestGetMarginLeverageBracketV1RespItemBracketsInner(unittest.TestCase):
    """GetMarginLeverageBracketV1RespItemBracketsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetMarginLeverageBracketV1RespItemBracketsInner:
        """Test GetMarginLeverageBracketV1RespItemBracketsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetMarginLeverageBracketV1RespItemBracketsInner`
        """
        model = GetMarginLeverageBracketV1RespItemBracketsInner()
        if include_optional:
            return GetMarginLeverageBracketV1RespItemBracketsInner(
                fast_num = 56,
                initial_margin_rate = 1.337,
                leverage = 56,
                maintenance_margin_rate = 1.337,
                max_debt = 56
            )
        else:
            return GetMarginLeverageBracketV1RespItemBracketsInner(
        )
        """

    def testGetMarginLeverageBracketV1RespItemBracketsInner(self):
        """Test GetMarginLeverageBracketV1RespItemBracketsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

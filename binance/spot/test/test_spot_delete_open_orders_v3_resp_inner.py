# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.spot_delete_open_orders_v3_resp_inner import SpotDeleteOpenOrdersV3RespInner

class TestSpotDeleteOpenOrdersV3RespInner(unittest.TestCase):
    """SpotDeleteOpenOrdersV3RespInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SpotDeleteOpenOrdersV3RespInner:
        """Test SpotDeleteOpenOrdersV3RespInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SpotDeleteOpenOrdersV3RespInner`
        """
        model = SpotDeleteOpenOrdersV3RespInner()
        if include_optional:
            return SpotDeleteOpenOrdersV3RespInner(
                client_order_id = '',
                cummulative_quote_qty = '',
                executed_qty = '',
                order_id = 56,
                order_list_id = 56,
                orig_client_order_id = '',
                orig_qty = '',
                price = '',
                self_trade_prevention_mode = '',
                side = '',
                status = '',
                symbol = '',
                time_in_force = '',
                transact_time = 56,
                type = '',
                contingency_type = '',
                list_client_order_id = '',
                list_order_status = '',
                list_status_type = '',
                order_reports = [
                    binance.spot.models.spot_delete_open_orders_v3_resp_order_item.SpotDeleteOpenOrdersV3RespOrderItem(
                        client_order_id = '', 
                        cummulative_quote_qty = '', 
                        executed_qty = '', 
                        order_id = 56, 
                        order_list_id = 56, 
                        orig_client_order_id = '', 
                        orig_qty = '', 
                        price = '', 
                        self_trade_prevention_mode = '', 
                        side = '', 
                        status = '', 
                        symbol = '', 
                        time_in_force = '', 
                        transact_time = 56, 
                        type = '', )
                    ],
                orders = [
                    binance.spot.models.spot_create_order_list_oco_v3_resp_orders_inner.SpotCreateOrderListOcoV3Resp_orders_inner(
                        client_order_id = '', 
                        order_id = 56, 
                        symbol = '', )
                    ],
                transaction_time = 56
            )
        else:
            return SpotDeleteOpenOrdersV3RespInner(
        )
        """

    def testSpotDeleteOpenOrdersV3RespInner(self):
        """Test SpotDeleteOpenOrdersV3RespInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_simple_earn_locked_list_v1_resp_rows_inner import GetSimpleEarnLockedListV1RespRowsInner

class TestGetSimpleEarnLockedListV1RespRowsInner(unittest.TestCase):
    """GetSimpleEarnLockedListV1RespRowsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSimpleEarnLockedListV1RespRowsInner:
        """Test GetSimpleEarnLockedListV1RespRowsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSimpleEarnLockedListV1RespRowsInner`
        """
        model = GetSimpleEarnLockedListV1RespRowsInner()
        if include_optional:
            return GetSimpleEarnLockedListV1RespRowsInner(
                detail = binance.spot.models.get_simple_earn_locked_list_v1_resp_rows_inner_detail.GetSimpleEarnLockedListV1Resp_rows_inner_detail(
                    apr = '', 
                    asset = '', 
                    boost_apr = '', 
                    boost_end_time = '', 
                    boost_reward_asset = '', 
                    duration = 56, 
                    extra_reward_apr = '', 
                    extra_reward_asset = '', 
                    is_sold_out = True, 
                    renewable = True, 
                    reward_asset = '', 
                    status = '', 
                    subscription_start_time = '', ),
                project_id = '',
                quota = binance.spot.models.get_simple_earn_locked_list_v1_resp_rows_inner_quota.GetSimpleEarnLockedListV1Resp_rows_inner_quota(
                    minimum = '', 
                    total_personal_quota = '', )
            )
        else:
            return GetSimpleEarnLockedListV1RespRowsInner(
        )
        """

    def testGetSimpleEarnLockedListV1RespRowsInner(self):
        """Test GetSimpleEarnLockedListV1RespRowsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

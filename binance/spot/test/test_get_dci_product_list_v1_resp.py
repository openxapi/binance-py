# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_dci_product_list_v1_resp import GetDciProductListV1Resp

class TestGetDciProductListV1Resp(unittest.TestCase):
    """GetDciProductListV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDciProductListV1Resp:
        """Test GetDciProductListV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetDciProductListV1Resp`
        """
        model = GetDciProductListV1Resp()
        if include_optional:
            return GetDciProductListV1Resp(
                list = [
                    binance.spot.models.get_dci_product_list_v1_resp_list_inner.GetDciProductListV1Resp_list_inner(
                        apr = '', 
                        auto_compound_plan_list = [
                            ''
                            ], 
                        can_purchase = True, 
                        create_timestamp = 56, 
                        duration = 56, 
                        exercised_coin = '', 
                        id = '', 
                        invest_coin = '', 
                        is_auto_compound_enable = True, 
                        max_amount = '', 
                        min_amount = '', 
                        option_type = '', 
                        order_id = 56, 
                        purchase_decimal = 56, 
                        purchase_end_time = 56, 
                        settle_date = 56, 
                        strike_price = '', )
                    ],
                total = 56
            )
        else:
            return GetDciProductListV1Resp(
        )
        """

    def testGetDciProductListV1Resp(self):
        """Test GetDciProductListV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

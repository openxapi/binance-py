# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_simple_earn_flexible_position_v1_resp import GetSimpleEarnFlexiblePositionV1Resp

class TestGetSimpleEarnFlexiblePositionV1Resp(unittest.TestCase):
    """GetSimpleEarnFlexiblePositionV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSimpleEarnFlexiblePositionV1Resp:
        """Test GetSimpleEarnFlexiblePositionV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSimpleEarnFlexiblePositionV1Resp`
        """
        model = GetSimpleEarnFlexiblePositionV1Resp()
        if include_optional:
            return GetSimpleEarnFlexiblePositionV1Resp(
                rows = [
                    binance.spot.models.get_simple_earn_flexible_position_v1_resp_rows_inner.GetSimpleEarnFlexiblePositionV1Resp_rows_inner(
                        air_drop_asset = '', 
                        asset = '', 
                        auto_subscribe = True, 
                        can_redeem = True, 
                        collateral_amount = '', 
                        cumulative_bonus_rewards = '', 
                        cumulative_real_time_rewards = '', 
                        cumulative_total_rewards = '', 
                        latest_annual_percentage_rate = '', 
                        product_id = '', 
                        tier_annual_percentage_rate = binance.spot.models.get_simple_earn_flexible_list_v1_resp_rows_inner_tier_annual_percentage_rate.GetSimpleEarnFlexibleListV1Resp_rows_inner_tierAnnualPercentageRate(
                            0_5_btc = 1.337, 
                            5_10_btc = 1.337, ), 
                        total_amount = '', 
                        yesterday_airdrop_percentage_rate = '', 
                        yesterday_real_time_rewards = '', )
                    ],
                total = 56
            )
        else:
            return GetSimpleEarnFlexiblePositionV1Resp(
        )
        """

    def testGetSimpleEarnFlexiblePositionV1Resp(self):
        """Test GetSimpleEarnFlexiblePositionV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

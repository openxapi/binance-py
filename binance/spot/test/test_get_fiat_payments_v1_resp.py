# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_fiat_payments_v1_resp import GetFiatPaymentsV1Resp

class TestGetFiatPaymentsV1Resp(unittest.TestCase):
    """GetFiatPaymentsV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetFiatPaymentsV1Resp:
        """Test GetFiatPaymentsV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetFiatPaymentsV1Resp`
        """
        model = GetFiatPaymentsV1Resp()
        if include_optional:
            return GetFiatPaymentsV1Resp(
                code = '',
                data = [
                    binance.spot.models.get_fiat_payments_v1_resp_data_inner.GetFiatPaymentsV1Resp_data_inner(
                        create_time = 56, 
                        crypto_currency = '', 
                        fiat_currency = '', 
                        obtain_amount = '', 
                        order_no = '', 
                        payment_method = '', 
                        price = '', 
                        source_amount = '', 
                        status = '', 
                        total_fee = '', 
                        update_time = 56, )
                    ],
                message = '',
                success = True,
                total = 56
            )
        else:
            return GetFiatPaymentsV1Resp(
        )
        """

    def testGetFiatPaymentsV1Resp(self):
        """Test GetFiatPaymentsV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

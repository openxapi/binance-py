# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.2.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_sub_account_futures_account_v1_resp import GetSubAccountFuturesAccountV1Resp

class TestGetSubAccountFuturesAccountV1Resp(unittest.TestCase):
    """GetSubAccountFuturesAccountV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSubAccountFuturesAccountV1Resp:
        """Test GetSubAccountFuturesAccountV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSubAccountFuturesAccountV1Resp`
        """
        model = GetSubAccountFuturesAccountV1Resp()
        if include_optional:
            return GetSubAccountFuturesAccountV1Resp(
                asset = '',
                assets = [
                    binance.spot.models.get_sub_account_futures_account_v1_resp_assets_inner.GetSubAccountFuturesAccountV1Resp_assets_inner(
                        asset = '', 
                        initial_margin = '', 
                        maintenance_margin = '', 
                        margin_balance = '', 
                        max_withdraw_amount = '', 
                        open_order_initial_margin = '', 
                        position_initial_margin = '', 
                        unrealized_profit = '', 
                        wallet_balance = '', )
                    ],
                can_deposit = True,
                can_trade = True,
                can_withdraw = True,
                email = '',
                fee_tier = 56,
                max_withdraw_amount = '',
                total_initial_margin = '',
                total_maintenance_margin = '',
                total_margin_balance = '',
                total_open_order_initial_margin = '',
                total_position_initial_margin = '',
                total_unrealized_profit = '',
                total_wallet_balance = '',
                update_time = 56
            )
        else:
            return GetSubAccountFuturesAccountV1Resp(
        )
        """

    def testGetSubAccountFuturesAccountV1Resp(self):
        """Test GetSubAccountFuturesAccountV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.subaccount_get_sub_account_transaction_statistics_v1_resp_trade_info_vos_inner import SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner

class TestSubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner(unittest.TestCase):
    """SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner:
        """Test SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner`
        """
        model = SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner()
        if include_optional:
            return SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner(
                btc = 56,
                btc_futures = 56,
                btc_margin = 56,
                busd = 56,
                busd_futures = 56,
                busd_margin = 56,
                var_date = 56,
                user_id = 56
            )
        else:
            return SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner(
        )
        """

    def testSubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner(self):
        """Test SubaccountGetSubAccountTransactionStatisticsV1RespTradeInfoVosInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

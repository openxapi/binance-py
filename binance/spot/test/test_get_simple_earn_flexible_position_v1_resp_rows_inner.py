# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_simple_earn_flexible_position_v1_resp_rows_inner import GetSimpleEarnFlexiblePositionV1RespRowsInner

class TestGetSimpleEarnFlexiblePositionV1RespRowsInner(unittest.TestCase):
    """GetSimpleEarnFlexiblePositionV1RespRowsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSimpleEarnFlexiblePositionV1RespRowsInner:
        """Test GetSimpleEarnFlexiblePositionV1RespRowsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSimpleEarnFlexiblePositionV1RespRowsInner`
        """
        model = GetSimpleEarnFlexiblePositionV1RespRowsInner()
        if include_optional:
            return GetSimpleEarnFlexiblePositionV1RespRowsInner(
                air_drop_asset = '',
                asset = '',
                auto_subscribe = True,
                can_redeem = True,
                collateral_amount = '',
                cumulative_bonus_rewards = '',
                cumulative_real_time_rewards = '',
                cumulative_total_rewards = '',
                latest_annual_percentage_rate = '',
                product_id = '',
                tier_annual_percentage_rate = binance.spot.models.get_simple_earn_flexible_list_v1_resp_rows_inner_tier_annual_percentage_rate.GetSimpleEarnFlexibleListV1Resp_rows_inner_tierAnnualPercentageRate(
                    0_5_btc = 1.337, 
                    5_10_btc = 1.337, ),
                total_amount = '',
                yesterday_airdrop_percentage_rate = '',
                yesterday_real_time_rewards = ''
            )
        else:
            return GetSimpleEarnFlexiblePositionV1RespRowsInner(
        )
        """

    def testGetSimpleEarnFlexiblePositionV1RespRowsInner(self):
        """Test GetSimpleEarnFlexiblePositionV1RespRowsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

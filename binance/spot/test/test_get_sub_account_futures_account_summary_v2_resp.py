# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_sub_account_futures_account_summary_v2_resp import GetSubAccountFuturesAccountSummaryV2Resp

class TestGetSubAccountFuturesAccountSummaryV2Resp(unittest.TestCase):
    """GetSubAccountFuturesAccountSummaryV2Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSubAccountFuturesAccountSummaryV2Resp:
        """Test GetSubAccountFuturesAccountSummaryV2Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSubAccountFuturesAccountSummaryV2Resp`
        """
        model = GetSubAccountFuturesAccountSummaryV2Resp()
        if include_optional:
            return GetSubAccountFuturesAccountSummaryV2Resp(
                future_account_summary_resp = binance.spot.models.get_sub_account_futures_account_summary_v2_resp_future_account_summary_resp.GetSubAccountFuturesAccountSummaryV2Resp_futureAccountSummaryResp(
                    asset = '', 
                    sub_account_list = [
                        binance.spot.models.get_sub_account_futures_account_summary_v1_resp_sub_account_list_inner.GetSubAccountFuturesAccountSummaryV1Resp_subAccountList_inner(
                            asset = '', 
                            email = '', 
                            total_initial_margin = '', 
                            total_maintenance_margin = '', 
                            total_margin_balance = '', 
                            total_open_order_initial_margin = '', 
                            total_position_initial_margin = '', 
                            total_unrealized_profit = '', 
                            total_wallet_balance = '', )
                        ], 
                    total_initial_margin = '', 
                    total_maintenance_margin = '', 
                    total_margin_balance = '', 
                    total_open_order_initial_margin = '', 
                    total_position_initial_margin = '', 
                    total_unrealized_profit = '', 
                    total_wallet_balance = '', )
            )
        else:
            return GetSubAccountFuturesAccountSummaryV2Resp(
        )
        """

    def testGetSubAccountFuturesAccountSummaryV2Resp(self):
        """Test GetSubAccountFuturesAccountSummaryV2Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

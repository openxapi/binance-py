# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.2.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_managed_subaccount_query_trans_log_for_trade_parent_v1_resp import GetManagedSubaccountQueryTransLogForTradeParentV1Resp

class TestGetManagedSubaccountQueryTransLogForTradeParentV1Resp(unittest.TestCase):
    """GetManagedSubaccountQueryTransLogForTradeParentV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetManagedSubaccountQueryTransLogForTradeParentV1Resp:
        """Test GetManagedSubaccountQueryTransLogForTradeParentV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetManagedSubaccountQueryTransLogForTradeParentV1Resp`
        """
        model = GetManagedSubaccountQueryTransLogForTradeParentV1Resp()
        if include_optional:
            return GetManagedSubaccountQueryTransLogForTradeParentV1Resp(
                count = 56,
                manager_sub_transfer_history_vos = [
                    binance.spot.models.get_managed_subaccount_query_trans_log_for_investor_v1_resp_manager_sub_transfer_history_vos_inner.GetManagedSubaccountQueryTransLogForInvestorV1Resp_managerSubTransferHistoryVos_inner(
                        amount = '', 
                        asset = '', 
                        create_time = 56, 
                        from_account_type = '', 
                        from_email = '', 
                        scheduled_data = 56, 
                        status = '', 
                        to_account_type = '', 
                        to_email = '', 
                        tran_id = 56, )
                    ]
            )
        else:
            return GetManagedSubaccountQueryTransLogForTradeParentV1Resp(
        )
        """

    def testGetManagedSubaccountQueryTransLogForTradeParentV1Resp(self):
        """Test GetManagedSubaccountQueryTransLogForTradeParentV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

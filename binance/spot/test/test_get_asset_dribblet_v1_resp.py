# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.spot.models.get_asset_dribblet_v1_resp import GetAssetDribbletV1Resp

class TestGetAssetDribbletV1Resp(unittest.TestCase):
    """GetAssetDribbletV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAssetDribbletV1Resp:
        """Test GetAssetDribbletV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAssetDribbletV1Resp`
        """
        model = GetAssetDribbletV1Resp()
        if include_optional:
            return GetAssetDribbletV1Resp(
                total = 56,
                user_asset_dribblets = [
                    binance.spot.models.get_asset_dribblet_v1_resp_user_asset_dribblets_inner.GetAssetDribbletV1Resp_userAssetDribblets_inner(
                        operate_time = 56, 
                        total_service_charge_amount = '', 
                        total_transfered_amount = '', 
                        trans_id = 56, 
                        user_asset_dribblet_details = [
                            binance.spot.models.get_asset_dribblet_v1_resp_user_asset_dribblets_inner_user_asset_dribblet_details_inner.GetAssetDribbletV1Resp_userAssetDribblets_inner_userAssetDribbletDetails_inner(
                                amount = '', 
                                from_asset = '', 
                                operate_time = 56, 
                                service_charge_amount = '', 
                                trans_id = 56, 
                                transfered_amount = '', )
                            ], )
                    ]
            )
        else:
            return GetAssetDribbletV1Resp(
        )
        """

    def testGetAssetDribbletV1Resp(self):
        """Test GetAssetDribbletV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Binance Sub Account API

    OpenAPI specification for Binance exchange - Subaccount API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.subaccount.models.subaccount_get_sub_account_assets_v4_resp import SubaccountGetSubAccountAssetsV4Resp

class TestSubaccountGetSubAccountAssetsV4Resp(unittest.TestCase):
    """SubaccountGetSubAccountAssetsV4Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubaccountGetSubAccountAssetsV4Resp:
        """Test SubaccountGetSubAccountAssetsV4Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubaccountGetSubAccountAssetsV4Resp`
        """
        model = SubaccountGetSubAccountAssetsV4Resp()
        if include_optional:
            return SubaccountGetSubAccountAssetsV4Resp(
                balances = [
                    binance.subaccount.models.subaccount_get_sub_account_assets_v4_resp_balances_inner.SubaccountGetSubAccountAssetsV4Resp_balances_inner(
                        asset = '', 
                        free = '', 
                        freeze = '', 
                        locked = '', 
                        withdrawing = '', )
                    ]
            )
        else:
            return SubaccountGetSubAccountAssetsV4Resp(
        )
        """

    def testSubaccountGetSubAccountAssetsV4Resp(self):
        """Test SubaccountGetSubAccountAssetsV4Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Binance Sub Account API

    OpenAPI specification for Binance exchange - Subaccount API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.subaccount.models.subaccount_get_managed_subaccount_asset_v1_resp_item import SubaccountGetManagedSubaccountAssetV1RespItem

class TestSubaccountGetManagedSubaccountAssetV1RespItem(unittest.TestCase):
    """SubaccountGetManagedSubaccountAssetV1RespItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubaccountGetManagedSubaccountAssetV1RespItem:
        """Test SubaccountGetManagedSubaccountAssetV1RespItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubaccountGetManagedSubaccountAssetV1RespItem`
        """
        model = SubaccountGetManagedSubaccountAssetV1RespItem()
        if include_optional:
            return SubaccountGetManagedSubaccountAssetV1RespItem(
                available_balance = '',
                btc_value = '',
                coin = '',
                in_order = '',
                name = '',
                total_balance = ''
            )
        else:
            return SubaccountGetManagedSubaccountAssetV1RespItem(
        )
        """

    def testSubaccountGetManagedSubaccountAssetV1RespItem(self):
        """Test SubaccountGetManagedSubaccountAssetV1RespItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

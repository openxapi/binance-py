# coding: utf-8

"""
    Binance Sub Account API

    OpenAPI specification for Binance exchange - Subaccount API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.subaccount.models.subaccount_get_sub_account_futures_internal_transfer_v1_resp_transfers_inner import SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner

class TestSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner(unittest.TestCase):
    """SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner:
        """Test SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner`
        """
        model = SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner()
        if include_optional:
            return SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner(
                asset = '',
                var_from = '',
                qty = '',
                time = 56,
                to = '',
                tran_id = 56
            )
        else:
            return SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner(
        )
        """

    def testSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner(self):
        """Test SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

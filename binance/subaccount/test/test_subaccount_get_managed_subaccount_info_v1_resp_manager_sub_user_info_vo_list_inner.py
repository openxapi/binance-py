# coding: utf-8

"""
    Binance Sub Account API

    OpenAPI specification for Binance exchange - Subaccount API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.subaccount.models.subaccount_get_managed_subaccount_info_v1_resp_manager_sub_user_info_vo_list_inner import SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner

class TestSubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner(unittest.TestCase):
    """SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner:
        """Test SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner`
        """
        model = SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner()
        if include_optional:
            return SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner(
                bind_parent_email = '',
                bind_parent_user_id = 56,
                email = '',
                insert_time_stamp = 56,
                is_future_enabled = True,
                is_margin_enabled = True,
                is_signed_lvt_risk_agreement = True,
                is_sub_user_enabled = True,
                is_user_active = True,
                managersub_user_id = 56,
                root_user_id = 56
            )
        else:
            return SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner(
        )
        """

    def testSubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner(self):
        """Test SubaccountGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

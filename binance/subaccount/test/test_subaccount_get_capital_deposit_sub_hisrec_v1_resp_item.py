# coding: utf-8

"""
    Binance Sub Account API

    OpenAPI specification for Binance exchange - Subaccount API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.subaccount.models.subaccount_get_capital_deposit_sub_hisrec_v1_resp_item import SubaccountGetCapitalDepositSubHisrecV1RespItem

class TestSubaccountGetCapitalDepositSubHisrecV1RespItem(unittest.TestCase):
    """SubaccountGetCapitalDepositSubHisrecV1RespItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubaccountGetCapitalDepositSubHisrecV1RespItem:
        """Test SubaccountGetCapitalDepositSubHisrecV1RespItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubaccountGetCapitalDepositSubHisrecV1RespItem`
        """
        model = SubaccountGetCapitalDepositSubHisrecV1RespItem()
        if include_optional:
            return SubaccountGetCapitalDepositSubHisrecV1RespItem(
                address = '',
                address_tag = '',
                amount = '',
                coin = '',
                confirm_times = '',
                id = '',
                insert_time = 56,
                network = '',
                status = 56,
                transfer_type = 56,
                tx_id = '',
                unlock_confirm = 56,
                wallet_type = 56
            )
        else:
            return SubaccountGetCapitalDepositSubHisrecV1RespItem(
        )
        """

    def testSubaccountGetCapitalDepositSubHisrecV1RespItem(self):
        """Test SubaccountGetCapitalDepositSubHisrecV1RespItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

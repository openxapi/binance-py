# coding: utf-8

"""
    Binance Sub Account API

    OpenAPI specification for Binance exchange - Subaccount API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.subaccount.models.subaccount_get_sub_account_futures_move_position_v1_resp_future_move_position_order_vo_list_inner import SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner

class TestSubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner(unittest.TestCase):
    """SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner:
        """Test SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner`
        """
        model = SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner()
        if include_optional:
            return SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner(
                from_user_email = '',
                position_side = '',
                price = '',
                product_type = '',
                quantity = '',
                side = '',
                symbol = '',
                time_stamp = 56,
                to_user_email = ''
            )
        else:
            return SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner(
        )
        """

    def testSubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner(self):
        """Test SubaccountGetSubAccountFuturesMovePositionV1RespFutureMovePositionOrderVoListInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

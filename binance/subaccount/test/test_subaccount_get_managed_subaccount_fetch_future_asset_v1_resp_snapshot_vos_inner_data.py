# coding: utf-8

"""
    Binance Sub Account API

    OpenAPI specification for Binance exchange - Subaccount API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.subaccount.models.subaccount_get_managed_subaccount_fetch_future_asset_v1_resp_snapshot_vos_inner_data import SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData

class TestSubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData(unittest.TestCase):
    """SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData:
        """Test SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData`
        """
        model = SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData()
        if include_optional:
            return SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData(
                assets = [
                    binance.subaccount.models.subaccount_get_managed_subaccount_fetch_future_asset_v1_resp_snapshot_vos_inner_data_assets_inner.SubaccountGetManagedSubaccountFetchFutureAssetV1Resp_snapshotVos_inner_data_assets_inner(
                        asset = '', 
                        margin_balance = 56, 
                        wallet_balance = 56, )
                    ],
                position = [
                    binance.subaccount.models.subaccount_get_managed_subaccount_fetch_future_asset_v1_resp_snapshot_vos_inner_data_position_inner.SubaccountGetManagedSubaccountFetchFutureAssetV1Resp_snapshotVos_inner_data_position_inner(
                        entry_price = 56, 
                        mark_price = 56, 
                        position_amt = 1.337, 
                        symbol = '', )
                    ]
            )
        else:
            return SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData(
        )
        """

    def testSubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData(self):
        """Test SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Binance COIN-M Futures API

    OpenAPI specification for Binance exchange - Cmfutures API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.cmfutures.models.cmfutures_get_exchange_info_v1_resp_rate_limits_inner import CmfuturesGetExchangeInfoV1RespRateLimitsInner

class TestCmfuturesGetExchangeInfoV1RespRateLimitsInner(unittest.TestCase):
    """CmfuturesGetExchangeInfoV1RespRateLimitsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CmfuturesGetExchangeInfoV1RespRateLimitsInner:
        """Test CmfuturesGetExchangeInfoV1RespRateLimitsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CmfuturesGetExchangeInfoV1RespRateLimitsInner`
        """
        model = CmfuturesGetExchangeInfoV1RespRateLimitsInner()
        if include_optional:
            return CmfuturesGetExchangeInfoV1RespRateLimitsInner(
                interval = '',
                interval_num = 56,
                limit = 56,
                rate_limit_type = ''
            )
        else:
            return CmfuturesGetExchangeInfoV1RespRateLimitsInner(
        )
        """

    def testCmfuturesGetExchangeInfoV1RespRateLimitsInner(self):
        """Test CmfuturesGetExchangeInfoV1RespRateLimitsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

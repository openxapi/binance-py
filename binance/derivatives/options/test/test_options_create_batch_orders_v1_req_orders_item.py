# coding: utf-8

"""
    Binance Options API

    OpenAPI specification for Binance exchange - Options API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.derivatives.options.models.options_create_batch_orders_v1_req_orders_item import OptionsCreateBatchOrdersV1ReqOrdersItem

class TestOptionsCreateBatchOrdersV1ReqOrdersItem(unittest.TestCase):
    """OptionsCreateBatchOrdersV1ReqOrdersItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OptionsCreateBatchOrdersV1ReqOrdersItem:
        """Test OptionsCreateBatchOrdersV1ReqOrdersItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OptionsCreateBatchOrdersV1ReqOrdersItem`
        """
        model = OptionsCreateBatchOrdersV1ReqOrdersItem()
        if include_optional:
            return OptionsCreateBatchOrdersV1ReqOrdersItem(
                client_order_id = '',
                is_mmp = True,
                new_order_resp_type = '',
                post_only = True,
                price = '',
                quantity = '',
                reduce_only = True,
                side = '',
                symbol = '',
                time_in_force = '',
                type = ''
            )
        else:
            return OptionsCreateBatchOrdersV1ReqOrdersItem(
                quantity = '',
                side = '',
                symbol = '',
                type = '',
        )
        """

    def testOptionsCreateBatchOrdersV1ReqOrdersItem(self):
        """Test OptionsCreateBatchOrdersV1ReqOrdersItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

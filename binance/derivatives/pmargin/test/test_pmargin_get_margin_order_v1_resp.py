# coding: utf-8

"""
    Binance Portfolio Margin API

    OpenAPI specification for Binance exchange - Pmargin API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.derivatives.pmargin.models.pmargin_get_margin_order_v1_resp import PmarginGetMarginOrderV1Resp

class TestPmarginGetMarginOrderV1Resp(unittest.TestCase):
    """PmarginGetMarginOrderV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PmarginGetMarginOrderV1Resp:
        """Test PmarginGetMarginOrderV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PmarginGetMarginOrderV1Resp`
        """
        model = PmarginGetMarginOrderV1Resp()
        if include_optional:
            return PmarginGetMarginOrderV1Resp(
                account_id = 56,
                client_order_id = '',
                cummulative_quote_qty = '',
                executed_qty = '',
                iceberg_qty = '',
                is_working = True,
                order_id = 56,
                orig_qty = '',
                prevented_match_id = None,
                prevented_quantity = None,
                price = '',
                self_trade_prevention_mode = '',
                side = '',
                status = '',
                stop_price = '',
                symbol = '',
                time = 56,
                time_in_force = '',
                type = '',
                update_time = 56
            )
        else:
            return PmarginGetMarginOrderV1Resp(
        )
        """

    def testPmarginGetMarginOrderV1Resp(self):
        """Test PmarginGetMarginOrderV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

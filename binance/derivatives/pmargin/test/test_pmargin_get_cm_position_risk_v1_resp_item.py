# coding: utf-8

"""
    Binance Portfolio Margin API

    OpenAPI specification for Binance exchange - Pmargin API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.derivatives.pmargin.models.pmargin_get_cm_position_risk_v1_resp_item import PmarginGetCmPositionRiskV1RespItem

class TestPmarginGetCmPositionRiskV1RespItem(unittest.TestCase):
    """PmarginGetCmPositionRiskV1RespItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PmarginGetCmPositionRiskV1RespItem:
        """Test PmarginGetCmPositionRiskV1RespItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PmarginGetCmPositionRiskV1RespItem`
        """
        model = PmarginGetCmPositionRiskV1RespItem()
        if include_optional:
            return PmarginGetCmPositionRiskV1RespItem(
                entry_price = '',
                leverage = '',
                liquidation_price = '',
                mark_price = '',
                max_qty = '',
                notional_value = '',
                position_amt = '',
                position_side = '',
                symbol = '',
                un_realized_profit = '',
                update_time = 56
            )
        else:
            return PmarginGetCmPositionRiskV1RespItem(
        )
        """

    def testPmarginGetCmPositionRiskV1RespItem(self):
        """Test PmarginGetCmPositionRiskV1RespItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

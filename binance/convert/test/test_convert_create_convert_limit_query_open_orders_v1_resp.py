# coding: utf-8

"""
    Binance Convert API

    OpenAPI specification for Binance exchange - Convert API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.convert.models.convert_create_convert_limit_query_open_orders_v1_resp import ConvertCreateConvertLimitQueryOpenOrdersV1Resp

class TestConvertCreateConvertLimitQueryOpenOrdersV1Resp(unittest.TestCase):
    """ConvertCreateConvertLimitQueryOpenOrdersV1Resp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConvertCreateConvertLimitQueryOpenOrdersV1Resp:
        """Test ConvertCreateConvertLimitQueryOpenOrdersV1Resp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConvertCreateConvertLimitQueryOpenOrdersV1Resp`
        """
        model = ConvertCreateConvertLimitQueryOpenOrdersV1Resp()
        if include_optional:
            return ConvertCreateConvertLimitQueryOpenOrdersV1Resp(
                list = [
                    binance.convert.models.convert_create_convert_limit_query_open_orders_v1_resp_list_inner.ConvertCreateConvertLimitQueryOpenOrdersV1Resp_list_inner(
                        create_time = 56, 
                        expired_timestamp = 56, 
                        from_amount = '', 
                        from_asset = '', 
                        inverse_ratio = '', 
                        order_id = 56, 
                        order_status = '', 
                        quote_id = '', 
                        ratio = '', 
                        to_amount = '', 
                        to_asset = '', )
                    ]
            )
        else:
            return ConvertCreateConvertLimitQueryOpenOrdersV1Resp(
        )
        """

    def testConvertCreateConvertLimitQueryOpenOrdersV1Resp(self):
        """Test ConvertCreateConvertLimitQueryOpenOrdersV1Resp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

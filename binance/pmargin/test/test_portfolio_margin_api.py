# coding: utf-8

"""
    Binance Portfolio Margin API

    OpenAPI specification for Binance exchange - Pmargin API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.pmargin.api.portfolio_margin_api import PortfolioMarginApi


class TestPortfolioMarginApi(unittest.TestCase):
    """PortfolioMarginApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PortfolioMarginApi()

    def tearDown(self) -> None:
        pass

    def test_create_asset_collection_v1(self) -> None:
        """Test case for create_asset_collection_v1

        Fund Collection by Asset(TRADE)
        """
        pass

    def test_create_auto_collection_v1(self) -> None:
        """Test case for create_auto_collection_v1

        Fund Auto-collection(TRADE)
        """
        pass

    def test_create_bnb_transfer_v1(self) -> None:
        """Test case for create_bnb_transfer_v1

        BNB transfer (TRADE)
        """
        pass

    def test_create_cm_conditional_order_v1(self) -> None:
        """Test case for create_cm_conditional_order_v1

        New CM Conditional Order(TRADE)
        """
        pass

    def test_create_cm_leverage_v1(self) -> None:
        """Test case for create_cm_leverage_v1

        Change CM Initial Leverage (TRADE)
        """
        pass

    def test_create_cm_order_v1(self) -> None:
        """Test case for create_cm_order_v1

        New CM Order(TRADE)
        """
        pass

    def test_create_cm_position_side_dual_v1(self) -> None:
        """Test case for create_cm_position_side_dual_v1

        Change CM Position Mode(TRADE)
        """
        pass

    def test_create_listen_key_v1(self) -> None:
        """Test case for create_listen_key_v1

        Start User Data Stream(USER_STREAM)
        """
        pass

    def test_create_margin_loan_v1(self) -> None:
        """Test case for create_margin_loan_v1

        Margin Account Borrow(MARGIN)
        """
        pass

    def test_create_margin_order_oco_v1(self) -> None:
        """Test case for create_margin_order_oco_v1

        Margin Account New OCO(TRADE)
        """
        pass

    def test_create_margin_order_v1(self) -> None:
        """Test case for create_margin_order_v1

        New Margin Order(TRADE)
        """
        pass

    def test_create_margin_repay_debt_v1(self) -> None:
        """Test case for create_margin_repay_debt_v1

        Margin Account Repay Debt(TRADE)
        """
        pass

    def test_create_repay_futures_negative_balance_v1(self) -> None:
        """Test case for create_repay_futures_negative_balance_v1

        Repay futures Negative Balance(USER_DATA)
        """
        pass

    def test_create_repay_futures_switch_v1(self) -> None:
        """Test case for create_repay_futures_switch_v1

        Change Auto-repay-futures Status(TRADE)
        """
        pass

    def test_create_repay_loan_v1(self) -> None:
        """Test case for create_repay_loan_v1

        Margin Account Repay(MARGIN)
        """
        pass

    def test_create_um_conditional_order_v1(self) -> None:
        """Test case for create_um_conditional_order_v1

        New UM Conditional Order (TRADE)
        """
        pass

    def test_create_um_fee_burn_v1(self) -> None:
        """Test case for create_um_fee_burn_v1

        Toggle BNB Burn On UM Futures Trade (TRADE)
        """
        pass

    def test_create_um_leverage_v1(self) -> None:
        """Test case for create_um_leverage_v1

        Change UM Initial Leverage(TRADE)
        """
        pass

    def test_create_um_order_v1(self) -> None:
        """Test case for create_um_order_v1

        New UM Order (TRADE)
        """
        pass

    def test_create_um_position_side_dual_v1(self) -> None:
        """Test case for create_um_position_side_dual_v1

        Change UM Position Mode(TRADE)
        """
        pass

    def test_delete_cm_all_open_orders_v1(self) -> None:
        """Test case for delete_cm_all_open_orders_v1

        Cancel All CM Open Orders(TRADE)
        """
        pass

    def test_delete_cm_conditional_all_open_orders_v1(self) -> None:
        """Test case for delete_cm_conditional_all_open_orders_v1

        Cancel All CM Open Conditional Orders(TRADE)
        """
        pass

    def test_delete_cm_conditional_order_v1(self) -> None:
        """Test case for delete_cm_conditional_order_v1

        Cancel CM Conditional Order(TRADE)
        """
        pass

    def test_delete_cm_order_v1(self) -> None:
        """Test case for delete_cm_order_v1

        Cancel CM Order(TRADE)
        """
        pass

    def test_delete_listen_key_v1(self) -> None:
        """Test case for delete_listen_key_v1

        Close User Data Stream(USER_STREAM)
        """
        pass

    def test_delete_margin_all_open_orders_v1(self) -> None:
        """Test case for delete_margin_all_open_orders_v1

        Cancel Margin Account All Open Orders on a Symbol(TRADE)
        """
        pass

    def test_delete_margin_order_list_v1(self) -> None:
        """Test case for delete_margin_order_list_v1

        Cancel Margin Account OCO Orders(TRADE)
        """
        pass

    def test_delete_margin_order_v1(self) -> None:
        """Test case for delete_margin_order_v1

        Cancel Margin Account Order(TRADE)
        """
        pass

    def test_delete_um_all_open_orders_v1(self) -> None:
        """Test case for delete_um_all_open_orders_v1

        Cancel All UM Open Orders(TRADE)
        """
        pass

    def test_delete_um_conditional_all_open_orders_v1(self) -> None:
        """Test case for delete_um_conditional_all_open_orders_v1

        Cancel All UM Open Conditional Orders (TRADE)
        """
        pass

    def test_delete_um_conditional_order_v1(self) -> None:
        """Test case for delete_um_conditional_order_v1

        Cancel UM Conditional Order(TRADE)
        """
        pass

    def test_delete_um_order_v1(self) -> None:
        """Test case for delete_um_order_v1

        Cancel UM Order(TRADE)
        """
        pass

    def test_get_account_v1(self) -> None:
        """Test case for get_account_v1

        Account Information(USER_DATA)
        """
        pass

    def test_get_balance_v1(self) -> None:
        """Test case for get_balance_v1

        Account Balance(USER_DATA)
        """
        pass

    def test_get_cm_account_v1(self) -> None:
        """Test case for get_cm_account_v1

        Get CM Account Detail(USER_DATA)
        """
        pass

    def test_get_cm_adl_quantile_v1(self) -> None:
        """Test case for get_cm_adl_quantile_v1

        CM Position ADL Quantile Estimation(USER_DATA)
        """
        pass

    def test_get_cm_all_orders_v1(self) -> None:
        """Test case for get_cm_all_orders_v1

        Query All CM Orders (USER_DATA)
        """
        pass

    def test_get_cm_commission_rate_v1(self) -> None:
        """Test case for get_cm_commission_rate_v1

        Get User Commission Rate for CM(USER_DATA)
        """
        pass

    def test_get_cm_conditional_all_orders_v1(self) -> None:
        """Test case for get_cm_conditional_all_orders_v1

        Query All CM Conditional Orders(USER_DATA)
        """
        pass

    def test_get_cm_conditional_open_order_v1(self) -> None:
        """Test case for get_cm_conditional_open_order_v1

        Query Current CM Open Conditional Order(USER_DATA)
        """
        pass

    def test_get_cm_conditional_open_orders_v1(self) -> None:
        """Test case for get_cm_conditional_open_orders_v1

        Query All Current CM Open Conditional Orders (USER_DATA)
        """
        pass

    def test_get_cm_conditional_order_history_v1(self) -> None:
        """Test case for get_cm_conditional_order_history_v1

        Query CM Conditional Order History(USER_DATA)
        """
        pass

    def test_get_cm_force_orders_v1(self) -> None:
        """Test case for get_cm_force_orders_v1

        Query User's CM Force Orders(USER_DATA)
        """
        pass

    def test_get_cm_income_v1(self) -> None:
        """Test case for get_cm_income_v1

        Get CM Income History(USER_DATA)
        """
        pass

    def test_get_cm_leverage_bracket_v1(self) -> None:
        """Test case for get_cm_leverage_bracket_v1

        CM Notional and Leverage Brackets(USER_DATA)
        """
        pass

    def test_get_cm_open_order_v1(self) -> None:
        """Test case for get_cm_open_order_v1

        Query Current CM Open Order (USER_DATA)
        """
        pass

    def test_get_cm_open_orders_v1(self) -> None:
        """Test case for get_cm_open_orders_v1

        Query All Current CM Open Orders(USER_DATA)
        """
        pass

    def test_get_cm_order_amendment_v1(self) -> None:
        """Test case for get_cm_order_amendment_v1

        Query CM Modify Order History(TRADE)
        """
        pass

    def test_get_cm_order_v1(self) -> None:
        """Test case for get_cm_order_v1

        Query CM Order(USER_DATA)
        """
        pass

    def test_get_cm_position_risk_v1(self) -> None:
        """Test case for get_cm_position_risk_v1

        Query CM Position Information(USER_DATA)
        """
        pass

    def test_get_cm_position_side_dual_v1(self) -> None:
        """Test case for get_cm_position_side_dual_v1

        Get CM Current Position Mode(USER_DATA)
        """
        pass

    def test_get_cm_user_trades_v1(self) -> None:
        """Test case for get_cm_user_trades_v1

        CM Account Trade List(USER_DATA)
        """
        pass

    def test_get_margin_all_order_list_v1(self) -> None:
        """Test case for get_margin_all_order_list_v1

        Query Margin Account's all OCO (USER_DATA)
        """
        pass

    def test_get_margin_all_orders_v1(self) -> None:
        """Test case for get_margin_all_orders_v1

        Query All Margin Account Orders (USER_DATA)
        """
        pass

    def test_get_margin_force_orders_v1(self) -> None:
        """Test case for get_margin_force_orders_v1

        Query User's Margin Force Orders(USER_DATA)
        """
        pass

    def test_get_margin_margin_interest_history_v1(self) -> None:
        """Test case for get_margin_margin_interest_history_v1

        Get Margin Borrow/Loan Interest History(USER_DATA)
        """
        pass

    def test_get_margin_margin_loan_v1(self) -> None:
        """Test case for get_margin_margin_loan_v1

        Query Margin Loan Record(USER_DATA)
        """
        pass

    def test_get_margin_max_borrowable_v1(self) -> None:
        """Test case for get_margin_max_borrowable_v1

        Margin Max Borrow(USER_DATA)
        """
        pass

    def test_get_margin_max_withdraw_v1(self) -> None:
        """Test case for get_margin_max_withdraw_v1

        Query Margin Max Withdraw(USER_DATA)
        """
        pass

    def test_get_margin_my_trades_v1(self) -> None:
        """Test case for get_margin_my_trades_v1

        Margin Account Trade List (USER_DATA)
        """
        pass

    def test_get_margin_open_order_list_v1(self) -> None:
        """Test case for get_margin_open_order_list_v1

        Query Margin Account's Open OCO (USER_DATA)
        """
        pass

    def test_get_margin_open_orders_v1(self) -> None:
        """Test case for get_margin_open_orders_v1

        Query Current Margin Open Order (USER_DATA)
        """
        pass

    def test_get_margin_order_list_v1(self) -> None:
        """Test case for get_margin_order_list_v1

        Query Margin Account's OCO (USER_DATA)
        """
        pass

    def test_get_margin_order_v1(self) -> None:
        """Test case for get_margin_order_v1

        Query Margin Account Order (USER_DATA)
        """
        pass

    def test_get_margin_repay_loan_v1(self) -> None:
        """Test case for get_margin_repay_loan_v1

        Query Margin repay Record(USER_DATA)
        """
        pass

    def test_get_ping_v1(self) -> None:
        """Test case for get_ping_v1

        Test Connectivity
        """
        pass

    def test_get_portfolio_interest_history_v1(self) -> None:
        """Test case for get_portfolio_interest_history_v1

        Query Portfolio Margin Negative Balance Interest History(USER_DATA)
        """
        pass

    def test_get_portfolio_negative_balance_exchange_record_v1(self) -> None:
        """Test case for get_portfolio_negative_balance_exchange_record_v1

        Query User Negative Balance Auto Exchange Record (USER_DATA)
        """
        pass

    def test_get_rate_limit_order_v1(self) -> None:
        """Test case for get_rate_limit_order_v1

        Query User Rate Limit (USER_DATA)
        """
        pass

    def test_get_repay_futures_switch_v1(self) -> None:
        """Test case for get_repay_futures_switch_v1

        Get Auto-repay-futures Status(USER_DATA)
        """
        pass

    def test_get_um_account_config_v1(self) -> None:
        """Test case for get_um_account_config_v1

        UM Futures Account Configuration(USER_DATA)
        """
        pass

    def test_get_um_account_v1(self) -> None:
        """Test case for get_um_account_v1

        Get UM Account Detail(USER_DATA)
        """
        pass

    def test_get_um_account_v2(self) -> None:
        """Test case for get_um_account_v2

        Get UM Account Detail V2(USER_DATA)
        """
        pass

    def test_get_um_adl_quantile_v1(self) -> None:
        """Test case for get_um_adl_quantile_v1

        UM Position ADL Quantile Estimation(USER_DATA)
        """
        pass

    def test_get_um_all_orders_v1(self) -> None:
        """Test case for get_um_all_orders_v1

        Query All UM Orders(USER_DATA)
        """
        pass

    def test_get_um_api_trading_status_v1(self) -> None:
        """Test case for get_um_api_trading_status_v1

        Portfolio Margin UM Trading Quantitative Rules Indicators(USER_DATA)
        """
        pass

    def test_get_um_commission_rate_v1(self) -> None:
        """Test case for get_um_commission_rate_v1

        Get User Commission Rate for UM(USER_DATA)
        """
        pass

    def test_get_um_conditional_all_orders_v1(self) -> None:
        """Test case for get_um_conditional_all_orders_v1

        Query All UM Conditional Orders(USER_DATA)
        """
        pass

    def test_get_um_conditional_open_order_v1(self) -> None:
        """Test case for get_um_conditional_open_order_v1

        Query Current UM Open Conditional Order(USER_DATA)
        """
        pass

    def test_get_um_conditional_open_orders_v1(self) -> None:
        """Test case for get_um_conditional_open_orders_v1

        Query All Current UM Open Conditional Orders(USER_DATA)
        """
        pass

    def test_get_um_conditional_order_history_v1(self) -> None:
        """Test case for get_um_conditional_order_history_v1

        Query UM Conditional Order History(USER_DATA)
        """
        pass

    def test_get_um_fee_burn_v1(self) -> None:
        """Test case for get_um_fee_burn_v1

        Get UM Futures BNB Burn Status (USER_DATA)
        """
        pass

    def test_get_um_force_orders_v1(self) -> None:
        """Test case for get_um_force_orders_v1

        Query User's UM Force Orders (USER_DATA)
        """
        pass

    def test_get_um_income_asyn_id_v1(self) -> None:
        """Test case for get_um_income_asyn_id_v1

        Get UM Futures Transaction Download Link by Id(USER_DATA)
        """
        pass

    def test_get_um_income_asyn_v1(self) -> None:
        """Test case for get_um_income_asyn_v1

        Get Download Id For UM Futures Transaction History (USER_DATA)
        """
        pass

    def test_get_um_income_v1(self) -> None:
        """Test case for get_um_income_v1

        Get UM Income History(USER_DATA)
        """
        pass

    def test_get_um_leverage_bracket_v1(self) -> None:
        """Test case for get_um_leverage_bracket_v1

        UM Notional and Leverage Brackets (USER_DATA)
        """
        pass

    def test_get_um_open_order_v1(self) -> None:
        """Test case for get_um_open_order_v1

        Query Current UM Open Order(USER_DATA)
        """
        pass

    def test_get_um_open_orders_v1(self) -> None:
        """Test case for get_um_open_orders_v1

        Query All Current UM Open Orders(USER_DATA)
        """
        pass

    def test_get_um_order_amendment_v1(self) -> None:
        """Test case for get_um_order_amendment_v1

        Query UM Modify Order History(TRADE)
        """
        pass

    def test_get_um_order_asyn_id_v1(self) -> None:
        """Test case for get_um_order_asyn_id_v1

        Get UM Futures Order Download Link by Id(USER_DATA)
        """
        pass

    def test_get_um_order_asyn_v1(self) -> None:
        """Test case for get_um_order_asyn_v1

        Get Download Id For UM Futures Order History (USER_DATA)
        """
        pass

    def test_get_um_order_v1(self) -> None:
        """Test case for get_um_order_v1

        Query UM Order (USER_DATA)
        """
        pass

    def test_get_um_position_risk_v1(self) -> None:
        """Test case for get_um_position_risk_v1

        Query UM Position Information(USER_DATA)
        """
        pass

    def test_get_um_position_side_dual_v1(self) -> None:
        """Test case for get_um_position_side_dual_v1

        Get UM Current Position Mode(USER_DATA)
        """
        pass

    def test_get_um_symbol_config_v1(self) -> None:
        """Test case for get_um_symbol_config_v1

        UM Futures Symbol Configuration(USER_DATA)
        """
        pass

    def test_get_um_trade_asyn_id_v1(self) -> None:
        """Test case for get_um_trade_asyn_id_v1

        Get UM Futures Trade Download Link by Id(USER_DATA)
        """
        pass

    def test_get_um_trade_asyn_v1(self) -> None:
        """Test case for get_um_trade_asyn_v1

        Get Download Id For UM Futures Trade History (USER_DATA)
        """
        pass

    def test_get_um_user_trades_v1(self) -> None:
        """Test case for get_um_user_trades_v1

        UM Account Trade List(USER_DATA)
        """
        pass

    def test_update_cm_order_v1(self) -> None:
        """Test case for update_cm_order_v1

        Modify CM Order(TRADE)
        """
        pass

    def test_update_listen_key_v1(self) -> None:
        """Test case for update_listen_key_v1

        Keepalive User Data Stream (USER_STREAM)
        """
        pass

    def test_update_um_order_v1(self) -> None:
        """Test case for update_um_order_v1

        Modify UM Order(TRADE)
        """
        pass


if __name__ == '__main__':
    unittest.main()

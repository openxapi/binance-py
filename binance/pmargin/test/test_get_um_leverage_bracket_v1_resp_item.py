# coding: utf-8

"""
    Binance Portfolio Margin API

    OpenAPI specification for Binance exchange - Pmargin API

    The version of the OpenAPI document: 0.2.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from binance.pmargin.models.get_um_leverage_bracket_v1_resp_item import GetUmLeverageBracketV1RespItem

class TestGetUmLeverageBracketV1RespItem(unittest.TestCase):
    """GetUmLeverageBracketV1RespItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetUmLeverageBracketV1RespItem:
        """Test GetUmLeverageBracketV1RespItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetUmLeverageBracketV1RespItem`
        """
        model = GetUmLeverageBracketV1RespItem()
        if include_optional:
            return GetUmLeverageBracketV1RespItem(
                brackets = [
                    binance.pmargin.models.get_um_leverage_bracket_v1_resp_item_brackets_inner.GetUmLeverageBracketV1RespItem_brackets_inner(
                        bracket = 56, 
                        cum = 56, 
                        initial_leverage = 56, 
                        maint_margin_ratio = 1.337, 
                        notional_cap = 56, 
                        notional_floor = 56, )
                    ],
                notional_coef = '',
                symbol = ''
            )
        else:
            return GetUmLeverageBracketV1RespItem(
        )
        """

    def testGetUmLeverageBracketV1RespItem(self):
        """Test GetUmLeverageBracketV1RespItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
